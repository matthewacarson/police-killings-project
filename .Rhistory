sum, na.rm = TRUE) %>%
data.frame(Majority = rownames(.), Population = .)
summary_tables$majority_summary_1 <-
left_join(
x = summary_tables$majority_table_1,
y = summary_tables$majority_pop_table_1,
by = "Majority"
)
summary_tables$majority_summary_1 <-
summary_tables$majority_summary_1 |>
mutate(
Annualized_Per_10_M =
Killings_Per_Yr / Population * 10000000
)
summary_tables$decile_race_denom <-
fatal_enc$joined |>
count(Majority, income_decile) |>
rename(Killings = n) |>
na.omit() |>
add_row(
fatal_enc$joined |>
count(income_decile) |>
rename(Killings = n) |>
na.omit() |>
mutate(Majority = 'All')
)
summary_tables$decile_pop_race_denom <-
# Black
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'Black') |>
aggregate(NH_BlackE ~ Majority + income_decile, FUN = sum) |>
rename(Population = NH_BlackE) |>
add_row(
# White
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'White') |>
aggregate(NH_WhiteE ~ Majority + income_decile, FUN = sum) |>
rename(Population = NH_WhiteE)) |>
add_row(
# Latino
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'Hispanic/Latino') |>
aggregate(Hisp_LatinoE ~ Majority + income_decile, FUN = sum) |>
rename(Population = Hisp_LatinoE)) |>
add_row(
all_tracts$income_population_quintiles_2020 |>
aggregate(Total_popE ~ income_decile, FUN = sum) |>
rename(Population = Total_popE) |> mutate(Majority = 'All')
)
summary_tables$decile_race_denom <-
left_join(
x = summary_tables$decile_pop_race_denom,
y = summary_tables$decile_race_denom,
by = join_by(Majority, income_decile)
) |>
mutate(Annualized_Per_10_M =
# coalesce replaces NAs with 0
coalesce(Killings / Population * 10000000 / 6, 0)) |>
rename(Income = income_decile)
summary_tables$decile_race_denom <-
fatal_enc$joined |>
count(Majority, income_decile) |>
rename(Killings = n) |>
na.omit() |>
add_row(
fatal_enc$joined |>
count(income_decile) |>
rename(Killings = n) |>
na.omit() |>
mutate(Majority = 'All')
)
summary_tables$decile_pop_race_denom <-
# Black
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'Black') |>
aggregate(NH_BlackE ~ Majority + income_decile, FUN = sum) |>
rename(Population = NH_BlackE) |>
add_row(
# White
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'White') |>
aggregate(NH_WhiteE ~ Majority + income_decile, FUN = sum) |>
rename(Population = NH_WhiteE)) |>
add_row(
# Latino
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'Hispanic/Latino') |>
aggregate(Hisp_LatinoE ~ Majority + income_decile, FUN = sum) |>
rename(Population = Hisp_LatinoE)) |>
add_row(
all_tracts$income_population_quintiles_2020 |>
aggregate(Total_popE ~ income_decile, FUN = sum) |>
rename(Population = Total_popE) |> mutate(Majority = 'All')
)
summary_tables$decile_race_denom <-
left_join(
x = summary_tables$decile_pop_race_denom,
y = summary_tables$decile_race_denom,
by = join_by(Majority, income_decile)
) |>
mutate(Annualized_Per_10_M =
# coalesce replaces NAs with 0
coalesce(Killings / Population * 10000000 / 6, 0)) |>
rename(Income = income_decile)
summary_tables$race_income_luof_race_denom <-
fatal_enc$joined |>
count(Majority, income_quintiles) |>
rename(Killings = n) |>
na.omit() |>
add_row(
fatal_enc$joined |>
count(income_quintiles) |>
rename(Killings = n) |>
na.omit() |>
mutate(Majority = 'All')
)
summary_tables$race_and_income_pop_race_denom <-
# Black
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'Black') |>
aggregate(NH_BlackE ~ Majority + income_quintiles, FUN = sum) |>
rename(Population = NH_BlackE) |>
add_row(
# White
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'White') |>
aggregate(NH_WhiteE ~ Majority + income_quintiles, FUN = sum) |>
rename(Population = NH_WhiteE)) |>
add_row(
# Latino
all_tracts$income_population_quintiles_2020 |>
filter(Majority == 'Hispanic/Latino') |>
aggregate(Hisp_LatinoE ~ Majority + income_quintiles, FUN = sum) |>
rename(Population = Hisp_LatinoE)) |>
add_row(
all_tracts$income_population_quintiles_2020 |>
aggregate(Total_popE ~ income_quintiles, FUN = sum) |>
rename(Population = Total_popE) |> mutate(Majority = 'All')
)
summary_tables$race_income_summary_race_denom <-
left_join(
x = summary_tables$race_and_income_pop_race_denom,
y = summary_tables$race_income_luof_race_denom,
by = join_by(Majority, income_quintiles)
) |>
mutate(Annualized_Per_10_M =
Killings / Population * 10000000 / 6,
Majority = factor(Majority, ordered = TRUE)) |>
rename(Income = income_quintiles)
summary_tables$race_income_summary_race_denom <-
left_join(
x = summary_tables$race_and_income_pop_race_denom,
y = summary_tables$race_income_luof_race_denom,
by = join_by(Majority, income_quintiles)
) |>
mutate(Annualized_Per_10_M =
Killings / Population * 10000000 / 6,
Majority = factor(Majority, ordered = TRUE)) |>
rename(Income = income_quintiles)
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
)
summary_tables$race_LUOF_Rescale_s <-
summary_tables$race_LUOF_Rescale |>
arrange(Quintile) |>
rename(
pop_quint_race = Population_in_tracts,
LUOF_Quint_Race = Killings_by_Quintile_and_Race,
LUOF_RaceTotal = Killings_Race_Total
)
summary_tables$race_LUOF_Rescale_s$Rate <-
summary_tables$race_LUOF_Rescale_s$LUOF_Quint_Race /
summary_tables$race_LUOF_Rescale_s$pop_quint_race *
10000000 / 6
summary_tables$race_LUOF_Rescale_White <-
summary_tables$race_LUOF_Rescale_s[
summary_tables$race_LUOF_Rescale_s$Race == "White",]
summary_tables$race_LUOF_Rescale_filter <-
summary_tables$race_LUOF_Rescale_s[
summary_tables$race_LUOF_Rescale_s$Race != "White",]
summary_tables$race_LUOF_Rescale_filter$white_prop <-
summary_tables$race_LUOF_Rescale_White$Prop_living_in_tract[match(
summary_tables$race_LUOF_Rescale_filter$Quintile,
summary_tables$race_LUOF_Rescale_White$Quintile
)]
summary_tables$race_LUOF_Rescale_filter$prop_x_rate <-
summary_tables$race_LUOF_Rescale_filter$Prop_living_in_tract *
summary_tables$race_LUOF_Rescale_filter$Rate
summary_tables$race_LUOF_Rescale_rounded <-
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11],
2,
FUN = function(x)
round(x = x, digits = 2)
) |> as.data.frame()
summary_tables$race_LUOF_Rescale_rounded <- cbind(
summary_tables$race_LUOF_Rescale_filter[, 1:2],
summary_tables$race_LUOF_Rescale_rounded
)
rownames(summary_tables$race_LUOF_Rescale_White) <- NULL
summary_tables$race_LUOF_Rescale_White
summary_tables$race_LUOF_Rescale_s$rescale <-
summary_tables$race_LUOF_Rescale_s$Rate *
summary_tables$race_LUOF_Rescale_s$Prop_living_in_tract
summary_tables$race_LUOF_Rescale_s
summary_tables$race_LUOF_Rescale
summary_tables$race_LUOF_Rescale_s
tapply(summary_tables$race_LUOF_Rescale_s$Population_in_tracts, summary_tables$race_LUOF_Rescale_s$Quintile, sum)
# Run summary file to bring in data to summarize
source(file = "summary_tables.R")
tapply(summary_tables$race_LUOF_Rescale_s$Population_in_tracts, summary_tables$race_LUOF_Rescale_s$Quintile, sum)
summary_tables$race_LUOF_Rescale_s
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
)
summary_tables$race_LUOF_Rescale_s <-
summary_tables$race_LUOF_Rescale |>
arrange(Quintile) |>
rename(
pop_quint_race = Population_in_tracts,
LUOF_Quint_Race = Killings_by_Quintile_and_Race,
LUOF_RaceTotal = Killings_Race_Total
)
summary_tables$race_LUOF_Rescale_s
summary_tables$quintile_race_proportion
summary_tables$race_LUOF_Rescale_s <-
summary_tables$race_LUOF_Rescale |>
arrange(Quintile) |>
rename(
pop_quint_race = Population_in_tracts,
LUOF_Quint_Race = Killings_by_Quintile_and_Race,
LUOF_RaceTotal = Killings_Race_Total
)
summary_tables$race_LUOF_Rescale_s$Rate <-
summary_tables$race_LUOF_Rescale_s$LUOF_Quint_Race /
summary_tables$race_LUOF_Rescale_s$pop_quint_race *
10000000 / 6
summary_tables$race_LUOF_Rescale_s
summary_tables$race_LUOF_Rescale_s$Rate <-
summary_tables$race_LUOF_Rescale_s$LUOF_Quint_Race /
summary_tables$race_LUOF_Rescale_s$pop_quint_race * 10000000 / 6
summary_tables$race_LUOF_Rescale_White <-
summary_tables$race_LUOF_Rescale_s[summary_tables$race_LUOF_Rescale_s$Race == "White",]
summary_tables$race_LUOF_Rescale_White
summary_tables$race_LUOF_Rescale_White$Prop_living_in_tract
summary_tables$race_LUOF_Rescale_White
# Run summary file to bring in data to summarize
source(file = "summary_tables.R")
summary_tables$race_LUOF_Rescale_filter
summary_tables$race_LUOF_Rescale_rounded
summary_tables$race_LUOF_Rescale_rounded <-
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
summary_tables$race_LUOF_Rescale_rounded <- cbind(
summary_tables$race_LUOF_Rescale_filter[, 1:2],
summary_tables$race_LUOF_Rescale_rounded
)
summary_tables$race_LUOF_Rescale_s
summary_tables$race_LUOF_Rescale_filter$rescaled <-
summary_tables$race_LUOF_Rescale_filter$Rate *
summary_tables$race_LUOF_Rescale_filter$white_prop
summary_tables$race_LUOF_Rescale_filter$rescaled
summary_tables$race_LUOF_Rescale_filter
96.45751 * 0.1184231
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
# Run summary file to bring in data to summarize
source(file = "summary_tables.R")
# Run summary file to bring in data to summarize
source(file = "summary_tables.R")
summary_tables$fatal_enc_table_1 <-  fatal_enc$joined %>%
count(Income = income_quintiles_nolab) %>% rename(Killings = n) %>%
filter(!is.na(Income)) %>% mutate(Killings_Per_Yr = Killings / 6)
summary_tables$pop_table_1 <- tapply(
all_tracts$income_population_quintiles_2020$Total_popE,
all_tracts$income_population_quintiles_2020$income_quintiles_nolab,
sum, na.rm = TRUE) %>%
data.frame(Income = rownames(.), Population = .)
summary_tables$summary_1 <-
left_join(
x = summary_tables$fatal_enc_table_1,
y = summary_tables$pop_table_1,
by = "Income")
summary_tables$summary_1$Majority <- "All"
summary_tables$summary_1 <- summary_tables$summary_1 |>
mutate(
Annualized_Per_10_M =
Killings_Per_Yr / Population * 10000000)
summary_tables$race_and_income <-
fatal_enc$joined |>
count(Majority, income_quintiles_nolab) |>
rename(Killings = n)
# Run summary file to bring in data to summarize
source(file = "summary_tables.R")
summary_tables$race_LUOF_Rescale_s$Rate *
summary_tables$race_LUOF_Rescale_s
summary_tables$race_LUOF_Rescale_s$rescale <-
summary_tables$race_LUOF_Rescale_s$Rate
# Run summary file to bring in data to summarize
source(file = "summary_tables.R")
summary_tables$race_LUOF_Rescale_s
tapply(summary_tables$race_LUOF_Rescale_s$Population_in_tracts, summary_tables$race_LUOF_Rescale_s$Quintile, sum)
summary_tables$race_LUOF_Rescale_s
(counterfactual_data$Counterfactual_Prop_living_in_tract * counterfactual_data$Killings_by_Quintile_and_Race / counterfactual_data$Population_in_tracts) * 100000
summary_tables$race_LUOF_Rescale_White
summary_tables$race_LUOF_Rescale_filter$rescaled
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
summary_tables$race_LUOF_Rescale_rounded <- cbind(
summary_tables$race_LUOF_Rescale_filter[, 1:2],
summary_tables$race_LUOF_Rescale_rounded
)
summary_tables$race_LUOF_Rescale_rounded
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
summary_tables$race_LUOF_Rescale_rounded
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
summary_tables$race_LUOF_Rescale_rounded
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
cbind(
summary_tables$race_LUOF_Rescale_filter[, 1:2],
summary_tables$race_LUOF_Rescale_rounded
)
######################################### #
######################################### #
# These tables use the race of the victim.
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
)
summary_tables$race_LUOF_Rescale_s <-
summary_tables$race_LUOF_Rescale |>
arrange(Quintile) |>
rename(
pop_quint_race = Population_in_tracts,
LUOF_Quint_Race = Killings_by_Quintile_and_Race,
LUOF_RaceTotal = Killings_Race_Total
)
summary_tables$race_LUOF_Rescale_s$Rate <-
summary_tables$race_LUOF_Rescale_s$LUOF_Quint_Race /
summary_tables$race_LUOF_Rescale_s$pop_quint_race * 10000000 / 6
summary_tables$race_LUOF_Rescale_White <-
summary_tables$race_LUOF_Rescale_s[summary_tables$race_LUOF_Rescale_s$Race == "White",]
summary_tables$race_LUOF_Rescale_filter <-
summary_tables$race_LUOF_Rescale_s[summary_tables$race_LUOF_Rescale_s$Race != "White",]
# merge(
# summary_tables$race_LUOF_Rescale_White[,c('Quintile', 'Prop_living_in_tract')],
# summary_tables$race_LUOF_Rescale_s,
# by = "Quintile"
# )
summary_tables$race_LUOF_Rescale_filter$white_prop <-
summary_tables$race_LUOF_Rescale_White$Prop_living_in_tract[match(
summary_tables$race_LUOF_Rescale_filter$Quintile,
summary_tables$race_LUOF_Rescale_White$Quintile
)]
summary_tables$race_LUOF_Rescale_filter$prop_x_rate <-
summary_tables$race_LUOF_Rescale_filter$Prop_living_in_tract *
summary_tables$race_LUOF_Rescale_filter$Rate
summary_tables$race_LUOF_Rescale_rounded <-
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
summary_tables$race_LUOF_Rescale_rounded <- cbind(
summary_tables$race_LUOF_Rescale_filter[, 1:2],
summary_tables$race_LUOF_Rescale_rounded
)
# write_csv(
#   x = summary_tables$race_LUOF_Rescale_rounded,
#   file = "reweighting.csv")
# summary_tables$race_LUOF_Rescale_filter$rescaled <-
#   summary_tables$race_LUOF_Rescale_filter$Rate *
#   summary_tables$race_LUOF_Rescale_filter$white_prop
#
# rownames(summary_tables$race_LUOF_Rescale_White) <- NULL
# summary_tables$race_LUOF_Rescale_White
# rownames(summary_tables$race_LUOF_Rescale_filter) <- NULL
# summary_tables$race_LUOF_Rescale_filter |>
#   select(-LUOF_Quint_Race, -Killings_Race_Total)
# summary_tables$race_LUOF_Rescale_s$rescale <-
# summary_tables$race_LUOF_Rescale_s$Rate *
# summary_tables$race_LUOF_Rescale_s$
summary_tables$race_LUOF_Rescale_s
# tapply(summary_tables$race_LUOF_Rescale_s$Prop_living_in_tract, summary_tables$race_LUOF_Rescale_s$Race, sum)
source("C:/Users/madou/OneDrive - UCLA IT Services/1)_PS-Honors/police-killings-github-project/summary_tables.R", echo=TRUE)
summary_tables$race_LUOF_Rescale_rounded
summary_tables$race_LUOF_Rescale_rounded_combined <- cbind(
summary_tables$race_LUOF_Rescale_filter[, 1:2],
summary_tables$race_LUOF_Rescale_rounded
)
summary_tables$race_LUOF_Rescale_rounded <-
apply(
summary_tables$race_LUOF_Rescale_filter[, 3:11], MARGIN = 2,
FUN = function(x) round(x = x, digits = 2)) |> as.data.frame()
summary_tables$race_LUOF_Rescale_rounded_combined <- cbind(
summary_tables$race_LUOF_Rescale_filter[, 1:2],
summary_tables$race_LUOF_Rescale_rounded
)
summary_tables$race_LUOF_Rescale_rounded_combined
summary_tables$race_LUOF_Rescale_filter
96.45751 * 0.1184231
summary_tables$race_LUOF_Rescale
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
) |> rename(
quintile = quintile,
race_of_victim = Race,
total_population = Population_in_tracts,
race_group_pop = race_total_pop,
prop_of_race_living_in_tracts = Prop_living_in_tract,
killings_by_quintile_and_race = Killings_by_Quintile_and_Race,
killings_race_total = Killings_Race_Total,
proportion_of_race_killed_in_these_tracts = Proportion_LUOF
)
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
) |> rename(
quintile = Quintile,
race_of_victim = Race,
total_population = Population_in_tracts,
race_group_pop = race_total_pop,
prop_of_race_living_in_tracts = Prop_living_in_tract,
killings_by_quintile_and_race = Killings_by_Quintile_and_Race,
killings_race_total = Killings_Race_Total,
proportion_of_race_killed_in_these_tracts = Proportion_LUOF
)
summary_tables$race_LUOF_Rescale
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
) |> rename(
quintile = Quintile,
race_of_victim = Race,
total_population = Population_in_tracts,
race_group_pop = race_total_pop,
prop_of_race_living_in_tracts = Prop_living_in_tract,
killings_by_quintile_and_race = Killings_by_Quintile_and_Race,
killings_race_total = Killings_Race_Total,
prop_of_race_killed_tract_type = Proportion_LUOF
)
summary_tables$race_LUOF_Rescale
summary_tables$race_LUOF_Rescale
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
) |> rename(
quintile = Quintile,
race_of_victim = Race,
population_tract_type = Population_in_tracts,
race_US_pop = race_total_pop,
prop_of_race_living_in_tracts = Prop_living_in_tract,
killings_by_quintile_and_race = Killings_by_Quintile_and_Race,
killings_race_total = Killings_Race_Total,
prop_of_race_killed_tract_type = Proportion_LUOF
)
summary_tables$race_LUOF_Rescale$Rate
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
) |> rename(
quintile = Quintile,
race_of_victim = Race,
population_tract_type = Population_in_tracts,
race_US_pop = race_total_pop,
prop_of_race_living_in_tracts = Prop_living_in_tract,
killings_tract_type = Killings_by_Quintile_and_Race,
killings_race_US_total = Killings_Race_Total,
prop_of_race_killed_tract_type = Proportion_LUOF
)
summary_tables$race_LUOF_Rescale
summary_tables$race_LUOF_Rescale <-
full_join(
x = summary_tables$race_quint_proportions,
y = summary_tables$quintile_race_proportion,
by = join_by(Race, Quintile)
) |> rename(
quintile = Quintile,
race_of_victim = Race,
population_tract_type = Population_in_tracts,
race_US_pop = race_total_pop,
prop_of_race_in_tract_type = Prop_living_in_tract,
killings_tract_type = Killings_by_Quintile_and_Race,
killings_race_US_total = Killings_Race_Total,
prop_of_race_killed_tract_type = Proportion_LUOF
)
